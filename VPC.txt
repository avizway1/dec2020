D: 22/01/2021

VPC : Virtual Private Cloud : Network resources in AWS.


IPv4 : 32 bit : 2^32 IPs.. 
IPv6 : 128 bit : 2^128 IPs.. 

IPv4 : 
Class A : 0 - 126
Class B : 128 - 191
Class C : 192 - 223

Class D : 224 - 239 : Multicasting
Class E : 240 - 255 : Future R&D


Public IP : Unique across the globe.. We need to pay of you want to use this..
Private IP : Unique with in the Network.. Free to use this.. For internal communication we use this..

PRIVATE IP RANGES

CLASS A: 10.0.0.0 to 10.255.255.255
CLASS B: 172.16.0.0 to 172.31.255.255
CLASS C: 192.168.0.0 to 192.168.255.255


Class A : 16 Million hosts and 127 Networks : N.H.H.H  : 
Class B : 65,000 Hosts and 16,000 Networks  : N.N.H.H  : 
Class C : 254 Hosts and 2 Million networks  : N.N.N.H  : 

cidr.xyx

32-32	32-31	32-30	32-29	32-28	32-27	32-26	32-25	32-24	32-16	32-0

/32	/31	/30	/29	/28	/27	/26	/25	/24	/16	/0

2^0	2^1	2^2	2^3	2^4	2^5	2^6	2^7	2^8	2^16	2^32

1	2	4	8	16	32	64	128	256	65536	4M


Every NEtwork reservrs two IPs : 0 & 255 : -2

But in AWS Environment : AWS Reservs 5 IPs : 
2 : Network ID and Broadcost ID
2 : DNS Servers
1 : Future use

/24 : 32-24 : 8 : 2^8 : 256 IPs : AWS reservs 5 : 256-5 : 251 USable IPs

AWS Supports Subnet from /28 to /16
Small Network : /28 : 16 IPs - 5 : 11 Usable IPs
Latgest n/w : /16 : 65536 - 5 : 65531 Usable IPs

____________________________________________________________________________________

D: 23/01/2021

Public Subnet : Instances are internet facing.. We can access Internet and We can access these resources over the internet.!!

Private Subnet :  These instances are intenal resources.. THese resources show not access over the intenet..!!


VPC Creation : Virtual Network..
Default VPC : 
--> Every region
--> All subnets are Public SUbnets.
--> We cannot choose the CIDR (Classless Inter Domain Routing). (IP Range)

CUstom VPC : 
--> We need to create this VPC.
--> We can choose CIDR. 
--> We can create Public SUbnets and Private Subnets.



Step 1 : Navigate to VPC, Create VPC,

VPC Name : CustomVPC, CIDR : 192.168.0.0/16, Tenancy: Default

Step 2 : Create Subnets in our CustomVPC.

--> Public SUbnet : ap-south-1a : 192.168.100.0/24
--> Private Subnet : ap-south-1b : 192.168.200.0/24


Step 3 : Create an Internet Gateway and Associate with "CustomVPC"
*One VPC can contains one Internet Gateway.

Step 4 : Create "Route Tables" for "Public Route" and "Private ROute"

Local ROute : It Provides Internal Communciation between all our VPC subnets. 

Create route table : Name :Public Route : Add a Route (0.0.0.0/0 --> InternetGW)
Navigate to Subnet Associations : Select the "Public SUbnet"

Create route table : Name :Private Route : Navigate to Subnet Associations : Select the "Private SUbnet".

Step 5 : (Optional) : ENable "Auto Assign IP settings" for public SUbnet. 


Jump Server / Bastian Host : Designed to connect to private subnet ec2 instance. 
Jump server always runs in CustomVPC Public SUbnet.


Task : Create VPC with 2 Public SUbnets and 2 Private SUbnets.

1 public and 1 private

1 Public ap-south-1a    1 Public Subnet ap-south-1b
1 Private ap-south-1a    1 Private Subnet ap-south-1b


_____________________________________________________________________________________

D: 25/01/2021

NAT Gateway : Designed to provide internet access to Private Subnet Resources.
--> NAT Gateway always need to create in "CUstomVPC PublicSUbnet".
--> We need to Generate an EIP while creating NAT Gateway.

--> We need to add an ENtry with NAT in CUstomVPC PrivateSubnet Associated ROuteTable.
(0.0.0.0/0 --> NATGateway).. NO Free TIer Eligibility..!!!!


NAT Instance : FREE Tier Eligibility.. We don;t use this in Prod Env.. 
--> THis is an EC2 Instance, NAT Purpose.. 
--> SHould be launched in "CUstomVPC Public SUbnet"
--> NAT Instance SG must be opened with http and https.
--> SOurce/Destination Check should be disabled.**

--> We need to add an ENtry with NAT in CUstomVPC PrivateSubnet Associated ROuteTable.
(0.0.0.0/0 --> NATInstance)..


Enable Logging on VPC : S3 / Cloudwatch logs
--> VPC Level / SUbnet level / Instance level..


How to ALlow / Deny traffic to a Subnet.!!

How to enable communication between Multiple VPC.!!


________________________________________________________________________________________

D: 26/01/2021


NACL : Network ACLs : 
--> It supports Allow / Deny opetions.
--> It works at Subnet Level.
--> One subnet can be member of one NACL at a time. 
--> We must open Ephemeral ports. (Temp Ports). (1024-65535).
--> We need to takes care about the inbound / outbound rules.
--> Newly created NACLs Deny all the traffic. We must open req ports explicitly.

--> Lowest rule number will have highest priority always.



VPC Peering : 
--> Enable communication between multiple VPCs.
--> Requester amd accepter CIDR block should not be same.
--> Req need to raise request and accpeter need to accept the conenction req.
--> Requester and accepter, both need to update the route table accordingly.
--> VPC Peering is Non-Transitive.


	VPC 1 			VPC 2

Region	Mumbai VPC ID		NV VPC ID
	AWS Account 1 no	AWS Account 2 no
 	CIDR Block 		CIDR Block


	vpc-079efb91140fba6f8	vpc-0c84f896a6c0bb6fe
	ap-south-1		us-east-1
	192.168.0.0/16		172.31.0.0/16


Edit Requester's VPC ROute tbales with Accepter CIDR block and Vice Versa..

Transit Gateway : https://www.youtube.com/watch?v=xyLlMBHy2wc
VPN Connectivity : https://www.youtube.com/watch?v=JSTyjISscNg


https://cloud.google.com/files/CloudVPNGuide-UsingCloudVPNwithAmazonWebServices.pdf
https://cloudmonix.com/blog/connect-amazon-vpc-to-azure/




































