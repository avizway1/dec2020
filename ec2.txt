EC2 : Elastic Compute Cloud : 
	+/-   cpu, memory, storage, network.. AWS

Project : POC : 

Infra + hardware + 100% upfront = switches, server rack, network rack, kvm switches, power connectivity, Coolinf, Security, Firewalls.. 

poc : 10 servers = x (Pay as you go)


Instances = Server = Azure VM = VM = GCP Engine = Box
terminate = Delete

On-Demand ec2 Instance : Non PRedictable usages, Non Predictable workloads.. Test temp.. 
Pricing : /Sec (Min of 60 Sec).. /Hr.. 

Reserved ec2 Instances : Stable workloads, Predictable uses.. Long term runs.. 
Duration : 1 Yr / 3 Yrs
	Standard RI : We cannot change the configuration..
	Convertable RI : We can change the config.. 
	Scheduled RI : For persistant/repeated req.

Pricing : 
	FUll Upfront : Pay 100% while purchasing
	Partial Upfront : Pay 30-50% while purchasing.. 								Pay remaining amount (used)monthly..	
	No Upfront : Pay everything monthly basis.. 
	

Spot Instances : We don't run Production worklods.. Test your application.. 
--> If we have flexible start / start for our application.. 
Bid your own pricing against AWS pricing.. If your quoted price is equal or greater than AWS price.. We will get the instance.. 
If price is increased, AWS Terminates the instance. 

AWS Pricing History : Help to quote the pricing
Spot fleet : Max Pricing 

--> If Price increase, AWS terminated our instance, we no need to pay for partial hours.
--> If price not increase, YOU terminated instance, We need to pay full usage cost.


1 hr 45 Min : AWS Terminated : 1 hr.. 
1 hr 45 Min : You Terminated : 1 hr 45 Min.. 

_____________________________________________________________________________________
D: 31/12/2020

ec2 is a region specific service.. 
Mumbai.. N Virginia..


Step 1: Choose an Amazon Machine Image (AMI): Amazon Linux 2 AMI : Template of an OS with required app and services.. 
	--> Quickstart
	--> MyAMI : CUstomisedAMI
	--> MarketPlace : buy/sell application/services/os. 
	--> COmmunityAMI

Step 2 : Choose Instance Type : t2.micro (Free Tier)

General Pupose : t2, t3, m4, m5 : GIves stable performance for all the resources.. 
COmpute optimised : c4, c5, c6 : Gives more compute powers
Disk Optimised : i2, i3 : Gives more Storage performances : (Input and Ouput operations per second)
Memory optimised : r4, r5, r6, x1 : GIves more memory perf : (RAM)
GPU Instances : P, G : More Graphic perf.. 

Step 3: Configure Instance Details

Shutdown behavior : STOP / Terminate	: stop
Enable termination protection : yes

Step 4: Add Storage : Go with 8 gb.. 10gb for ubuntu

Step 5: Add Tags
Name : 
Application :
Platform :
COst Center : 

Step 6: Configure Security Group : Firewall at Instance level.
Port : 0-65536

Linux : SSH (Secure Shell) : 22
WIndows : RDP (Remote Desktop Protocol) : 3389
http : 80
https : 443
mssql : 1433
MySQL : 3306


Step 7 : Review, Create Keypair and Launch instance.
KeyPair : Encryption and Decryption.. WOrks with Publickey and privatekey
	AWS Keeps the PublicKEy
	We gets the PrivateKEy.. TO get connected to instance.. We need to browser the 	PrivateKEY against ouyr ec2 instance.. 


Windows Desktop USers :
1. Windows Command Prompt : Install "OpenSSH" then use "CMD"
2. Windows : Install "GIT for Windows" : Git Terminal and connect to instance
3. Putty : Download and Instal Putty : ** Putty don't support .PEM format so We need to    convert the .PEM to .ppk format.
4. MobaXterm : Here also we required .ppk format only.

Linux Desktop : Open terminal and connect to instance.
ssh -i KEYPAIR ec2-user@PUBLICIP

Permissions error : MAC :  chmod 400 Keypair.pem


Task : Launch Linux INsyance and connect to it without any error.

______________________________________________________________________________________

D: 02/01/2021

We use Keypair to Generate the password.
Ec2 instances copies with PublicKey.. We have Privatekey.. 

open run --> mstsc --> Privide IP address and password


Security Groups : FIrewall at Instance Level.

--> We must open ports to get connected to instance (WIndows: 3389 / Linux:22)
--> If we make ur instance as webserver must open open the port (http: 80 / https:443)

inbound: What you want to deliver from ec2 instance. 
outbound : What you want to access within ec2 instance. (0.0.0.0/0)

Anywhere : 0.0.0.0/0

CHanges to the Security Group takes effect immediately.
No need to perform stop/start.. No need to reboot.. 

C:\inetpub\wwwroot

Task : Launch windows ec2 instance and make it as webserver. How security group works.

____________________________________________________________________________________

D: 04/01/2021

root contains OS. For root volume we can use only SSD and Magnetic.. 

SSD : Solid State drive : gp2, gp3, io1, io2
HDD : Harddisk drive : sc1, st1
Magnetic : Standard 


General Purpose SSD : gp2 & gp3 : Low latency interactive applications.. Development and Test Environment... 
Size : Min 1 GiB, Max : 16 TiB
Performance : Max 16,000 IOPS (input and Output operations per second)
Perf Allocation : 1 gb Volume = 3 IOPS (1 : 3 Ratio) with Min of 100 IOPS

(But with GP3. We do have option to choose required IOPS count. Same as ProvisionedIOPS.)


Provisioned IOPS SSD : io1 & io2 : Worklods requires morethan 16k IOPS.. I/O Intensive database workloads... Production environment with specific workloads.. 
Size : Min 4 GiB, Max : 16 TiB
Performance : Max 64,000 IOPS (input and Output operations per second)
Perf Allocation : 1 gb Volume = 50 IOPS (1 : 50) but We do have an option to choose specifc IOPS count.. 

Magnetic : Standard : Lowest perf and lowest cost storage.. 
Size : Min 1 GiB, Max 1 TiB


Throughput Optimized HDD : BigData, Data Warehousing, Log Processing.. 
Size: Min 125 GiB, Max: 16 TiB
Throughput : 500 MiB/S

COld HDD : Same as Throughput but Infrequrntly Accessed storage... When we required Lowest storage cost.. 
Throughout : 250 MiB/S


Default : Delete on Termination is Enabled for Root volume. 
Not enabled for Additional Vlumes.



sudo su		--> Switch to root user
whoami		--> tells us as a what user we are working/loggedin now.
pwd		--> print working directory (Where we are)
mkdir name	--> Make Directory/Folder
mkdir newvolume1--> Created a New Directory

df -Th		: Shows the available volumes
lsblk		: Shows all the volumes associated with this ec2 instance.

2gb volume name/path : /dev/xvdb

mount /dev/xvdb newvolume1		--> This gives an error (wrong fs) : No file system available in 2gb volume.

mkfs -t xfs /dev/xvdb

mount /dev/xvdb newvolume1

to make it as a Perminent mount.. We need to add an entry in "/etc/fstab".

Get the entry from "/etc/mtab" file. 
cat /etc/mtab	--> COpy the entry related to Newvolume1

/dev/xvdb /home/ec2-user/newvolume1 xfs rw,relatime,attr2,inode64,noquota 0 0

vim /etc/fstab
Press I to goto Insert Mode
Paste the entry we ot from Mtab file
Press ESC
Enter :wq


Task : Launch an ec2 instance, Add 2gb volume.. make it available.. Add entry in fstab.

Task 2 : Add 1 more gb to existing 2gb volume.. How to extend..!!!
df -Th  --> Grab the Mount point / Device name
xfs_growfs -d /mountpoint
_______________________________________________________________________________________

D: 05/01/2021


Filesystems : Linux ect3, ext4, xfs
Windows : FAT16, FAT32, NTFS, ReFS

--> Decreasing volume size is not possible. 
--> Instance and VOlumes should be in same AZ. If our Volume is in another AZ we cannot mount it directly. 


Snapshot : Backup copy of our EBS volumes.
From a SS we can create multiple copies of the volumes in Diff AZs.
--> SS : Point-in time copies.. 


DLM : Data LifeCycle Manager : SNapshot Manager : 

______________________________________________________________________________________

D: 06/01/2021

To know the existing volume file system information : file -s /dev/xvd*
mount /dev/xvdf /foldername


10 ec2 instance.. Install with webserver.. Custom Data.. install some applications.. 

Launch 1 instance : Customise all the settings : Prepare a GoldenAMI : From this GAMI, we can launch N number of the ec2 instance.. --> all cu


Apache : yum install httpd
Nginx : yum install nginx

rpm : redhat package manager :  
yum : Yellowdog update manager : 


yum install httpd -y
service httpd status/start/stop/restart
chkconfig httpd on
cd /var/www/html/

/var/www/html/ --> Apache Doc root path.. Create/place all your webpages.. 
for File transfer : WinSCP 

Editors : vi, vim , nano

VIM Editor:

vim index.html	
Press I		--> INSERT Mode
Press ESC	--> Takes out from INSERT Mode
:wq		--> Write changes to file and Quit the editor
:q!		--> Don't Write changes to file and Quit the editor


_____________________________________________________________________________________

D: 07/01/2021


#!/bin/bash
yum install httpd -y
service httpd start
chkconfig httpd on
echo "<h1>THis is a BSS Webserver</h1>" >> /var/www/html/index.html

FOr Vertical Scaling.. We need to stop the ec2 instance.. Configuration upgradation/downgradation.. 


Stop and Start instance will change the Instance Public IP Address, Not Private Address.
Reboot operation won;t change the public IP address.

EIP : Elastic IP Address : We can geenrate an EIP and Associate to ec2 instance. It won;t wont if we perform stop/start. 

ENI : Elastic Network Interface : NIC card for ec2 instance : 
Instance and ENI must be in same Subnet/AZ. 

Shared Tenancy : Underlying resources shared with multiple Customers.
Dedicated tenancy : Underlying h/w won't share with anyone.
	Dedicated Instance : less visibility.
	Dedicated Host : More visibility, We can apply licenses at h/w level (CPU).
https://aws.amazon.com/ec2/dedicated-hosts/


We have 2 status checks on our ec2 instance.. 
Instance Status Check : reboot works most of the times.. Get system logs to inspect more.
System Status check : stop and start instance to fix this issue.


Instance Store Volumes : Ehemeral storages.. Temp storages.. 
--> We cannot stop/start ec2 insatnce.. 
--> If underlying instance failure happens, we will loss all the data. 
--> No Free Tier Eligibility. 

Task : Launch a Windows 2016 Instance, Change the password, CHange wallpaper, Install Putty, Install IIS with custom Webpage.. --> 
	--> Create a GoldenAMI of this instance, Launch an ec2 instance from GAMI. Verify all the settings.. Keypair generated password works or not..????

_____________________________________________________________________________________

D: 08/01/2021


Userdata executes when we launch our ec2 instance. 

#cloud-config : to execute commands after every reboot
Windows : <persist>true</persist>


curl http://169.254.169.254/latest/user-data/

<script>commands </script>
<powershell> </powershell>

Install-WindowsFeature -name Web-Server -IncludeManagementTools

curl http://169.254.169.254/latest/meta-data/


Load Balancing : 
--> Vertical Scaling
--> Horizantal Scaling 


CloudWatch : Service to monitor the resources.  (cpu, disk, network).. We cannot monitor Memory (RAM) usage with default metrics..

Basic Monitoring : 5 Minutes interval   : free
Detailed Monitoring / Enhanced Monitoring : 1 Minutes : Costus

Vertical scaling : we need to perform manually. 

________________________________________________________________________________________

D: 11/01/2021

#!/bin/bash
yum install httpd -y
service httpd start
chkconfig httpd on
echo "<h1>THis is my webserver 8080</h1>" >> /var/www/html/index.html

ELBs :
--> Classic ELB : http, https, tcp, udp... (Previous Generation)
--> Application ELB : http and https
--> Network ELB : tcp, udp, tcp_udp, tls.. 


Internal / internet facing : 

Access Logs : S3 bucket

free Tier : 750 Hrs/Month.. 1 ELB.. 12 Months.. 




















